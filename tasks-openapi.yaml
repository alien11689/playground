openapi: 3.1.1
info:
  title: Tasks API
  description: Tasks sample API
  version: 0.0.2

paths:
  /tasks:
    get:
      summary: Returns a list of tasks.
      operationId: GetTasks
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTasksResponse"

    post:
      summary: Adds a new task
      operationId: AddTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTaskRequest"
      responses:
        201:
          description: Task created
          headers:
            Location:
              required: true
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /tasks/{taskId}:
    get:
      summary: Returns a single task
      operationId: GetTask
      parameters:
        - in: path
          name: taskId
          schema:
            $ref: "#/components/schemas/TaskId"
          required: true
      responses:
        200:
          description: Task view
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Returns a single task
      operationId: UpdateTask
      parameters:
        - in: path
          name: taskId
          schema:
            $ref: "#/components/schemas/TaskId"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        202:
          description: Task updated
        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AddTaskRequest:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
      required:
        - id
        - summary

    GetTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
      required:
        - tasks

    Task:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TaskId"
        summary:
          type: string
        description:
          type: string
        status:
          $ref: "#/components/schemas/TaskStatus"
        createdAt:
          type: string
          format: date-time
          readonly: true
        updatedAt:
          type: string
          format: date-time
          readonly: true
      required:
        - id
        - summary
        - status
        - createdAt
        - updatedAt

    TaskId:
      type: string

    TaskStatus:
      type: string
      enum:
        - NEW
        - PENDING
        - DONE
        - REJECTED

    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message

  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"