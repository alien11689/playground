openapi: 3.1.1
info:
  title: Tasks API
  description: Tasks sample API
  version: 0.0.3

paths:
  /tasks:
    get:
      summary: Returns a list of tasks.
      operationId: GetTasks
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTasksResponse"

    post:
      summary: Adds a new task
      operationId: AddTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTaskRequest"
      responses:
        201:
          description: Task created
          headers:
            Location:
              required: true
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        400:
          $ref: "#/components/responses/BadRequest"

  /tasks/{taskId}:
    get:
      summary: Returns a task
      operationId: GetTask
      parameters:
        - $ref: "#/components/parameters/taskId"
      responses:
        200:
          description: Task view
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        404:
          $ref: "#/components/responses/TaskNotFound"
    put:
      summary: Updates a task
      operationId: UpdateTask
      parameters:
        - $ref: "#/components/parameters/taskId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        204:
          description: Task updated
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/TaskNotFound"
  /tasks/{taskId}/comments:
    parameters:
      - $ref: "#/components/parameters/taskId"
    get:
      operationId: GetTaskComments
      summary: Get task comments
      parameters:
        - $ref: "#/components/parameters/taskId"
      responses:
        200:
          description: Comments list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTaskCommentsResponse"
        404:
          $ref: "#/components/responses/TaskNotFound"
    post:
      operationId: AddTaskComment
      summary: Post a task comment
      parameters:
        - $ref: "#/components/parameters/taskId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTaskCommentRequest"
      responses:
        201:
          description: Task comment added
          headers:
            Location:
              required: true
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/TaskNotFound"
  /tasks/{taskId}/comments/{commentId}:
    put:
      operationId: UpdateTaskComment
      summary: Update a task comment
      parameters:
        - $ref: "#/components/parameters/taskId"
        - $ref: "#/components/parameters/commentId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        204:
          description: Comment updated
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/TaskOrCommentNotFound"
    delete:
      operationId: DeleteTaskComment
      summary: Delete a task comment
      parameters:
        - $ref: "#/components/parameters/taskId"
        - $ref: "#/components/parameters/commentId"
      responses:
        204:
          description: Comment deleted
        404:
          $ref: "#/components/responses/TaskOrCommentNotFound"

components:
  schemas:
    AddTaskRequest:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
      required:
        - id
        - summary

    GetTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
      required:
        - tasks

    Task:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TaskId"
          readOnly: true
        summary:
          type: string
        description:
          type: string
        status:
          $ref: "#/components/schemas/TaskStatus"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - summary
        - status
        - createdAt
        - updatedAt

    TaskId:
      type: string
      format: uuid

    TaskStatus:
      type: string
      enum:
        - NEW
        - PENDING
        - DONE
        - REJECTED

    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    GetTaskCommentsResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
      required:
        - comments

    Comment:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CommentId"
          readOnly: true
        content:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - content
        - createdAt
        - updatedAt

    AddTaskCommentRequest:
      type: object
      properties:
        content:
          type: string
      required:
        - content

    CommentId:
      type: string
      format: uuid

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    TaskNotFound:
      description: Task not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    TaskOrCommentNotFound:
      description: Task or comment not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  parameters:
    taskId:
      in: path
      name: taskId
      schema:
        $ref: "#/components/schemas/TaskId"
      required: true
    commentId:
      in: path
      name: commentId
      schema:
        $ref: "#/components/schemas/CommentId"
      required: true
